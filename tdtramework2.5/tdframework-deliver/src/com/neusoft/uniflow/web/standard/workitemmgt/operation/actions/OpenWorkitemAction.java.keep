package com.neusoft.uniflow.web.standard.workitemmgt.operation.actions;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.neusoft.uniflow.api.handler.NWWorkItem;
import com.neusoft.uniflow.web.AO.WorkItemAO;
import com.neusoft.uniflow.web.util.SessionManager;
import com.neusoft.uniflow.web.util.UniException;

public class OpenWorkitemAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String workItemID = request.getParameter("workitemID");
		WorkItemAO workitemAO = WorkItemAO.getInstance();

		NWWorkItem workItem = null;
		try {
			workItem = workitemAO.getWorkItem(request, workItemID);
		} catch (Exception e) {
			request.getSession().setAttribute(
					SessionManager.ERROR,
					new UniException(e));
			return mapping.findForward("error");
		}
		if (workItem.getCurState() == 1 || workItem.getCurState() == 2) {
			try {
				workItem.doHandlerFlag();
				workItem.doOpen();
				String userID = (String) request.getSession().getAttribute("uni_biz_userid");
				if (workItem.getAppType().indexOf("|")>0){
					String appurl = "/unieap/pages/workflow/standard/workitem/operation/allapplications.jsp";
					appurl = appurl + "?activityid=" +workItem.getActDef().getID();
		    		String uid="";
		    		int entType = workItem.getEntityType();
		    		if(entType==0||entType==1){
		    		    uid = workItem.getEntityID(); 
		    		}else{
		    		    uid=String.valueOf(entType);
		    		}
		    		
					appurl = appurl + "&opstring=" + workItem.getWorkItemID()+","+workItem.getProcInstID()+","+uid+","+userID;
					request.setAttribute("appURL", appurl);
				}else{
					String appURL = workitemAO.getRealAppURL(request, workItem);
					if (!appURL.equals(""))
					{
						appURL = appURL + "&userID=" + userID;
						request.setAttribute("appURL", appURL);
					}
					else
						request.setAttribute("appURL", "/display.do");
				}
				return mapping.findForward("taskhandler");
			} catch (Exception e) {
				request.getSession().setAttribute(SessionManager.ERROR,
						new UniException(e));
				return mapping.findForward("error");
			}
		} else {
			try {
				String appURL = workitemAO.getRealAppURL(request, workItem);
				if (!appURL.equals(""))
					request.setAttribute("appURL", appURL);
				else
					request.setAttribute("appURL", "/display.do");
				return mapping.findForward("taskviewer");
			} catch (Exception e) {
				request.getSession().setAttribute(SessionManager.ERROR,
						new UniException(e));
				return mapping.findForward("error");
			}
		}
	}
}
